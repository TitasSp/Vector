.TH "Vector.h" 3 "Version v3.0" "Vector" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vector.h
.SH SYNOPSIS
.br
.PP
\fR#include <iostream>\fP
.br
\fR#include <stdexcept>\fP
.br
\fR#include <algorithm>\fP
.br
\fR#include <initializer_list>\fP
.br
\fR#include <limits>\fP
.br
\fR#include <iterator>\fP
.br
\fR#include <type_traits>\fP
.br
\fR#include <memory>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBVector< T >\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T> bool \fBoperator==\fP (const \fBVector\fP< T > &lhs, const \fBVector\fP< T > &rhs)"
.br
.ti -1c
.RI "template<typename T> bool \fBoperator!=\fP (const \fBVector\fP< T > &lhs, const \fBVector\fP< T > &rhs)"
.br
.ti -1c
.RI "template<typename T> bool \fBoperator<\fP (const \fBVector\fP< T > &lhs, const \fBVector\fP< T > &rhs)"
.br
.ti -1c
.RI "template<typename T> bool \fBoperator<=\fP (const \fBVector\fP< T > &lhs, const \fBVector\fP< T > &rhs)"
.br
.ti -1c
.RI "template<typename T> bool \fBoperator>\fP (const \fBVector\fP< T > &lhs, const \fBVector\fP< T > &rhs)"
.br
.ti -1c
.RI "template<typename T> bool \fBoperator>=\fP (const \fBVector\fP< T > &lhs, const \fBVector\fP< T > &rhs)"
.br
.ti -1c
.RI "template<typename T> void \fBswap\fP (\fBVector\fP< T > &lhs, \fBVector\fP< T > &rhs) noexcept"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<typename T> bool operator!= (const \fBVector\fP< T > & lhs, const \fBVector\fP< T > & rhs)"

.SS "template<typename T> bool operator< (const \fBVector\fP< T > & lhs, const \fBVector\fP< T > & rhs)"

.SS "template<typename T> bool operator<= (const \fBVector\fP< T > & lhs, const \fBVector\fP< T > & rhs)"

.SS "template<typename T> bool operator== (const \fBVector\fP< T > & lhs, const \fBVector\fP< T > & rhs)"

.SS "template<typename T> bool operator> (const \fBVector\fP< T > & lhs, const \fBVector\fP< T > & rhs)"

.SS "template<typename T> bool operator>= (const \fBVector\fP< T > & lhs, const \fBVector\fP< T > & rhs)"

.SS "template<typename T> void swap (\fBVector\fP< T > & lhs, \fBVector\fP< T > & rhs)\fR [noexcept]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Vector from the source code\&.
